% !TEX root = ../Projektdokumentation.tex
\section{Fazit} 
\label{sec:Fazit}

\subsection{Soll-/Ist-Vergleich}
\label{sec:SollIstVergleich}

<<<<<<< HEAD
Es wurden alle festgelegten Ziele aus dem Pflichtenheft erfolgreich umgesetzt und implementiert. Die Zeit von 70 Stunden und der in Abschnitt ~\ref{sec:Projektphasen} (\nameref{sec:Projektphasen}) erstellte Projektplan wurden insgesamt eingehalten auch wenn es bei den einzelnen Projektphasen zu Verschiebungen gekommen ist. Die Implementierung im \ac{ECC} System hat etwas länger gedauert als zuerst angenommen, dafür konnte ein Großteil der Logik ins \ac{APO} System kopiert und hier einige Zeit gespart werden. In der Tabelle ~\ref{tab:Soll-/Ist-Vergleich}: ~\nameref{tab:Soll-/Ist-Vergleich} wird die tatsächlich benötigte Zeit gegenüber die geplante Zeit gestellt und verglichen.
=======
Es wurden alle festgelegten Ziele aus dem Pflichtenheft erfolgreich umgesetzt und implementiert. Die Zeit von 70 Stunden und der in Abschnitt ~\ref{sec:Projektphasen} (\nameref{sec:Projektphasen}) erstellte Projektplan wurden insgesamt eingehalten, auch wenn es bei einzelnen Projektphasen zu kleinen Verschiebungen gekommen ist. Die Implementierung im \ac{ECC} System hat etwas länger gedauert als zuerst angenommen, dafür konnte ein Großteil der Logik ins \ac{APO} System kopiert und hier einige Zeit gespart werden. In der Tabelle ~\ref{tab:Soll-/Ist-Vergleich}: ~\nameref{tab:Soll-/Ist-Vergleich} wird die tatsächlich benötigte Zeit der geplante Zeit gegenüber gestellt und verglichen.
>>>>>>> origin/feat/mergeProblem
\tabelle{Soll-/Ist-Vergleich der Projektphasen Zeitplanung}{tab:Soll-/Ist-Vergleich}{Zeitnachher}

\subsection{Ausblick}
\label{sec:Ausblick}
<<<<<<< HEAD
Alle im Lastenheft definierten Anforderungen konnten erfüllt werden. Dennoch möchte ich hier einen kleinen Ausblick auf mögliche weitere Feature geben, die während der Entwicklung aufgefallen und als praktisch erachtet wurden. Zum einen gibt es noch weitere Transaktionen, die erweiter werden können wie z.B. die MD04, um den Planer noch mehr Komfort zu bieten. Außerdem sollte man in einer späteren Version im \ac{ECC} im Administration Screen nicht nur einen Feldnamen angeben können, sondern auch die Datenbanktabelle bzw. mehrere Einträge vornehmen können. Außerdem sollte in absehbarer Zukunft ein Lösch Programm geschrieben werden, das die Aufträge, welche sich im ECC System in der /CAMELOT/OC\_COMT Datenbanktabelle befinden überprüft und Aufträge welche nicht mehr existieren aus der Tabelle löscht. Aufgrund des in Abschnitt~\nameref{sec:Architekturdesign} beschriebenen Aufbaus des Programms lassen sich Änderungen und Anpassungen sehr einfach vornehmen. Außerdem erhöht dies die Wartbarkeit der Programme, da alle Mitarbeiter des Camelot ITLabs sich besondern mit dieser Struktur auskennen. 
=======
Hier möchte ich noch einen kleinen Ausblick auf mögliche weitere Feature geben. Während der Entwicklung sind noch einige Erweiterungsmöglichkeiten aufgefallen die hilfreich wären. Zum einen gibt es noch weitere Transaktionen, die erweitert werden könnten wie z.B. die MD04, um dem Planer noch mehr Komfort zu bieten. Außerdem sollte man in einer späteren Version im \ac{ECC} im Administration Screen nicht nur einen Feldnamen, sondern auch die Datenbanktabelle angeben können bzw. mehrere Einträge vornehmen können. Zudem sollte in absehbarer Zukunft ein Löschprogramm geschrieben werden, das die Aufträge, welche sich im ECC System in der /CAMELOT/OC\_COMT Datenbanktabelle befinden, überprüft und Aufträge, die nicht mehr existieren, aus der Tabelle löscht. Aufgrund des in Abschnitt~\nameref{sec:Architekturdesign} beschriebenen Aufbau des Programms lassen sich Änderungen und Anpassungen sehr einfach vornehmen. 
>>>>>>> origin/feat/mergeProblem
